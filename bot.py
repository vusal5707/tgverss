import logging
import os
import re
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram import executor
from aiogram.dispatcher.filters import ReplyFilter
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
GROUP_INPUT_ID = os.getenv("GROUP_INPUT_ID")  # –ì—Ä—É–ø–ø–∞, –≥–¥–µ –ø–∏—à—É—Ç –∑–∞–ø—Ä–æ—Å—ã
GROUP_OUTPUT_ID = os.getenv("GROUP_OUTPUT_ID")  # –ì—Ä—É–ø–ø–∞, –∫—É–¥–∞ –±–æ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
user_requests = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@dp.message_handler()
async def handle_user_message(message: Message):
    chat_id = message.chat.id
    text = message.text
    
    # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
    parts = text.split()
    if len(parts) < 4:
        await message.reply("–û—à–∏–±–∫–∞! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \n–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ Party ID Email –î–∞—Ç–∞")
        return
    
    doc_type, party_id, email, date = parts[0], parts[1], parts[2], " ".join(parts[3:])
    
    formatted_message = (f"üîπ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è\n"
                         f"–ö–ª–∏–µ–Ω—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –¥–æ–∫—É–º–µ–Ω—Ç—ã\n"
                         f"üìÑ –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞: {doc_type}\n"
                         f"üÜî Party ID: {party_id}\n"
                         f"üìß Email: {email}\n"
                         f"üìÖ –î–∞—Ç–∞: {date}")
    
    sent_message = await bot.send_message(GROUP_OUTPUT_ID, formatted_message)
    user_requests[sent_message.message_id] = chat_id  # –°–≤—è–∑—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–º
    
    await message.reply("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ OUTPUT
@dp.message_handler(ReplyFilter(), chat_id=GROUP_OUTPUT_ID)
async def handle_group_reply(message: Message):
    if message.reply_to_message and message.reply_to_message.message_id in user_requests:
        user_chat_id = user_requests[message.reply_to_message.message_id]
        await bot.send_message(user_chat_id, f"–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å:\n{message.text}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
